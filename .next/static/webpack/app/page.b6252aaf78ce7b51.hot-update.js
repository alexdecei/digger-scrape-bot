"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useBotState.tsx":
/*!***********************************!*\
  !*** ./src/hooks/useBotState.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useBotState: () => (/* binding */ useBotState)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/hooks/use-toast */ \"(app-pages-browser)/./src/hooks/use-toast.ts\");\n/* harmony import */ var _utils_apiService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/apiService */ \"(app-pages-browser)/./src/utils/apiService.ts\");\nvar _s = $RefreshSig$();\n\n\n\nconst getInitialState = ()=>{\n    if (true) {\n        const savedState = localStorage.getItem('digger_bot_state');\n        if (savedState) {\n            try {\n                return JSON.parse(savedState);\n            } catch (e) {\n                console.error('Error parsing saved bot state', e);\n            }\n        }\n    }\n    return {\n        isRunning: false,\n        isConnected: false,\n        results: [],\n        oktaCode: ''\n    };\n};\nconst useBotState = ()=>{\n    _s();\n    const [botState, setBotState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getInitialState);\n    const updateOktaCode = (code)=>{\n        setBotState((prev)=>({\n                ...prev,\n                oktaCode: code\n            }));\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useBotState.useEffect\": ()=>{\n            localStorage.setItem('digger_bot_state', JSON.stringify(botState));\n        }\n    }[\"useBotState.useEffect\"], [\n        botState\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useBotState.useEffect\": ()=>{\n            _utils_apiService__WEBPACK_IMPORTED_MODULE_2__.apiService.getBotState().then({\n                \"useBotState.useEffect\": (param)=>{\n                    let { running } = param;\n                    setBotState({\n                        \"useBotState.useEffect\": (prev)=>({\n                                ...prev,\n                                isRunning: running\n                            })\n                    }[\"useBotState.useEffect\"]);\n                }\n            }[\"useBotState.useEffect\"]).catch({\n                \"useBotState.useEffect\": (err)=>console.error('[Bot Sync] Failed:', err)\n            }[\"useBotState.useEffect\"]);\n        }\n    }[\"useBotState.useEffect\"], []);\n    const toggleBot = async ()=>{\n        try {\n            if (botState.isRunning) {\n                await _utils_apiService__WEBPACK_IMPORTED_MODULE_2__.apiService.setBotState(false);\n                setBotState((prev)=>({\n                        ...prev,\n                        isRunning: false\n                    }));\n                (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.toast)({\n                    title: \"Bot Stopped\",\n                    description: \"The scraping process has been stopped.\"\n                });\n            } else {\n                (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.toast)({\n                    title: \"Connecting...\",\n                    description: \"Initializing the browser session...\"\n                });\n                await _utils_apiService__WEBPACK_IMPORTED_MODULE_2__.apiService.setBotState(true, botState.oktaCode);\n                setBotState((prev)=>({\n                        ...prev,\n                        isRunning: true,\n                        isConnected: true\n                    }));\n                (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.toast)({\n                    title: \"Bot Started\",\n                    description: \"The scraping process has begun.\"\n                });\n            }\n        } catch (error) {\n            console.error('Error toggling bot:', error);\n            (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.toast)({\n                title: \"Error\",\n                description: \"Failed to control the bot. Please try again.\",\n                variant: \"destructive\"\n            });\n            // ðŸ‘‡ Important : on vÃ©rifie le vrai Ã©tat backend si une erreur survient\n            const res = await _utils_apiService__WEBPACK_IMPORTED_MODULE_2__.apiService.getBotState();\n            setBotState((prev)=>({\n                    ...prev,\n                    isRunning: res.running\n                }));\n        }\n    };\n    const toggleResultSelection = (id)=>{\n        setBotState((prev)=>({\n                ...prev,\n                results: prev.results.map((result)=>result.id === id ? {\n                        ...result,\n                        selected: !result.selected\n                    } : result)\n            }));\n    };\n    const selectAllResults = (selected)=>{\n        setBotState((prev)=>({\n                ...prev,\n                results: prev.results.map((result)=>({\n                        ...result,\n                        selected\n                    }))\n            }));\n    };\n    const clearResults = ()=>{\n        setBotState((prev)=>({\n                ...prev,\n                results: []\n            }));\n    };\n    const copySelectedResults = ()=>{\n        const selectedResults = botState.results.filter((r)=>r.selected);\n        if (selectedResults.length === 0) {\n            (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.toast)({\n                title: \"No Selection\",\n                description: \"Please select at least one result to copy.\"\n            });\n            return;\n        }\n        const text = selectedResults.map((r)=>\"\".concat(r.numeroAbo, \", \").concat(r.prenom, \", \").concat(r.codePostal)).join('\\n');\n        navigator.clipboard.writeText(text).then(()=>{\n            (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.toast)({\n                title: \"Copied to Clipboard\",\n                description: \"\".concat(selectedResults.length, \" result(s) copied successfully.\")\n            });\n        }).catch((err)=>{\n            console.error('Failed to copy:', err);\n            (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.toast)({\n                title: \"Copy Failed\",\n                description: \"Could not copy to clipboard. Please try again.\",\n                variant: \"destructive\"\n            });\n        });\n    };\n    const exportSelectedResults = ()=>{\n        const selectedResults = botState.results.filter((r)=>r.selected);\n        if (selectedResults.length === 0) {\n            (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.toast)({\n                title: \"No Selection\",\n                description: \"Please select at least one result to export.\"\n            });\n            return;\n        }\n        const text = selectedResults.map((r)=>\"\".concat(r.numeroAbo, \", \").concat(r.prenom, \", \").concat(r.codePostal)).join('\\n');\n        const blob = new Blob([\n            text\n        ], {\n            type: 'text/plain'\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = \"digger-export-\".concat(new Date().toISOString().split('T')[0], \".txt\");\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n        (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.toast)({\n            title: \"Export Complete\",\n            description: \"\".concat(selectedResults.length, \" result(s) exported successfully.\")\n        });\n    };\n    return {\n        botState,\n        toggleBot,\n        toggleResultSelection,\n        selectAllResults,\n        clearResults,\n        copySelectedResults,\n        exportSelectedResults,\n        updateOktaCode\n    };\n};\n_s(useBotState, \"HUN8Ego6ZW7w0KQHnmhxukySd90=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useBotState.tsx\n"));

/***/ })

});